{
  "address": "0x2429fC6FEDbfCe6f91E7048eFc2328AdfbBAe755",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address payable[]",
          "name": "to",
          "type": "address[]"
        }
      ],
      "name": "drip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts2",
          "type": "uint256[]"
        }
      ],
      "name": "witdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x696b5e7e664da3165c0fcfdb45b5904e99b5da00db335ddb2f3fd8af45a38ed7",
  "receipt": {
    "to": null,
    "from": "0xef1F5D4C835Ac094F8D96C26c2A964C99b4050e0",
    "contractAddress": "0x2429fC6FEDbfCe6f91E7048eFc2328AdfbBAe755",
    "transactionIndex": 3,
    "gasUsed": "3695076",
    "logsBloom": "0x
    "blockHash": "0x7ea90f9a3066fc4b367cc7c402b1240aaa5f8015b02f3f59d5c3f5612d18880b",
    "transactionHash": "0x696b5e7e664da3165c0fcfdb45b5904e99b5da00db335ddb2f3fd8af45a38ed7",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 946047,
        "transactionHash": "0x696b5e7e664da3165c0fcfdb45b5904e99b5da00db335ddb2f3fd8af45a38ed7",
        "address": "0x2429fC6FEDbfCe6f91E7048eFc2328AdfbBAe755",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ef1f5d4c835ac094f8d96c26c2a964c99b4050e0"
        ],
        "data": "0x",
        "logIndex": 15,
        "blockHash": "0x7ea90f9a3066fc4b367cc7c402b1240aaa5f8015b02f3f59d5c3f5612d18880b"
      }
    ],
    "blockNumber": 946047,
    "cumulativeGasUsed": "5023671",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0x0000000000000000000000000000000000000000",
      "0xe0114Bec0350947FB148007aDB8A42689b924143",
      "0xbB2cF54C82a6d4137cD88eAF8ad1805D77b3D060",
      "0x214C329b6fDDD8Ed36Fcb1554AFa767147413C1c",
      "0x4a0284C70734ca3d1Af51Cac3D34f33547D1A65e",
      "0xc4E8419afEfb35C057eAC4F1B721e28b9baAEc3c"
    ],
    [
      "50000000000000000",
      "100000",
      "100000000000000000",
      "50000000",
      "50000000",
      "10000000000000000000"
    ]
  ],
  "numDeployments": 6,
  "solcInputHash": "5d69e719dbb62332b4928f2b7d0e1ba8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"to\",\"type\":\"address[]\"}],\"name\":\"drip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts2\",\"type\":\"uint256[]\"}],\"name\":\"witdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Faucet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./libraries/Ownable.sol\\\";\\n\\ncontract Faucet is Ownable {\\n    mapping(address => uint) cache;\\n    address[] tokens;\\n    uint[] amounts;\\n\\n    constructor(address[] memory _tokens, uint[] memory _amounts) Ownable(msg.sender) {\\n        tokens = _tokens;\\n        amounts = _amounts;\\n    }\\n\\n    function drip(address payable[] calldata to) public onlyOwner {\\n        for (uint i = 0; i < to.length; i++) {\\n            address payable target = to[i];\\n            for (uint j = 0; j < tokens.length; j++) {\\n                address token = tokens[j];\\n                uint amount = amounts[j];\\n                if (token == address(0)) {\\n                    target.transfer(amount);\\n                } else {\\n                    IERC20(token).transfer(target, amount);\\n                }\\n            }\\n        }\\n    }\\n\\n    function witdraw(uint[] calldata amounts2) public onlyOwner {\\n        for (uint j = 0; j < tokens.length; j++) {\\n            address token = tokens[j];\\n            uint amount = amounts2[j];\\n            if (token == address(0)) {\\n                payable(msg.sender).transfer(amount);\\n            } else {\\n                IERC20(token).transfer(msg.sender, amount);\\n            }\\n        }\\n    }\\n\\n    receive() external payable {}\\n\\n    fallback() external payable {}\\n\\n    function getBalance() public view returns (uint) {\\n        return address(this).balance;\\n    }\\n}\\n\",\"keccak256\":\"0x409b2b06f2c8b6f7b2d0d79ea1ae5f6e9bb46866772de840b307283321ad7ebd\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.5.0;\\n\\ninterface IERC20 {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint);\\n\\n    function balanceOf(address owner) external view returns (uint);\\n\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n\\n    function transfer(address to, uint value) external returns (bool);\\n\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x28b0e3104ddb60adddef3c545654df69f0c02b497448d49a620bce9d128dfd30\",\"license\":\"GPL-3.0\"},\"contracts/libraries/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.9;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x1c436e506acad7a440fc79cd5ba971fe2c1c81a5155feb425311434e35d13cb1\",\"license\":\"MIT\"},\"contracts/libraries/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.9;\\n\\nimport {Context} from \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6dfdf069ba9750d9bbd1e8118609407c08fc45c84ccea56069ceee78bcaa2539\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620009953803806200099583398101604081905262000034916200028c565b33806200005b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b62000066816200009b565b5081516200007c906002906020850190620000eb565b5080516200009290600390602084019062000155565b5050506200036a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000143579160200282015b828111156200014357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200010c565b506200015192915062000193565b5090565b82805482825590600052602060002090810192821562000143579160200282015b828111156200014357825182559160200191906001019062000176565b5b8082111562000151576000815560010162000194565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620001eb57620001eb620001aa565b604052919050565b60006001600160401b038211156200020f576200020f620001aa565b5060051b60200190565b600082601f8301126200022b57600080fd5b81516020620002446200023e83620001f3565b620001c0565b82815260059290921b840181019181810190868411156200026457600080fd5b8286015b8481101562000281578051835291830191830162000268565b509695505050505050565b60008060408385031215620002a057600080fd5b82516001600160401b0380821115620002b857600080fd5b818501915085601f830112620002cd57600080fd5b81516020620002e06200023e83620001f3565b82815260059290921b840181019181810190898411156200030057600080fd5b948201945b83861015620003375785516001600160a01b0381168114620003275760008081fd5b8252948201949082019062000305565b918801519196509093505050808211156200035157600080fd5b50620003608582860162000219565b9150509250929050565b61061b806200037a6000396000f3fe6080604052600436106100565760003560e01c806312065fe01461005f578063428dc4511461007f578063715018a61461009f5780638da5cb5b146100b4578063d37c4c29146100dc578063f2fde38b146100fc57005b3661005d57005b005b34801561006b57600080fd5b506040514781526020015b60405180910390f35b34801561008b57600080fd5b5061005d61009a366004610509565b61011c565b3480156100ab57600080fd5b5061005d6102b4565b3480156100c057600080fd5b506000546040516001600160a01b039091168152602001610076565b3480156100e857600080fd5b5061005d6100f7366004610509565b6102c8565b34801561010857600080fd5b5061005d610117366004610560565b6103fd565b610124610440565b60005b818110156102af57600083838381811061014357610143610584565b90506020020160208101906101589190610560565b905060005b60025481101561029a5760006002828154811061017c5761017c610584565b6000918252602082200154600380546001600160a01b03909216935090849081106101a9576101a9610584565b60009182526020909120015490506001600160a01b038216610201576040516001600160a01b0385169082156108fc029083906000818181858888f193505050501580156101fb573d6000803e3d6000fd5b50610285565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820183905283169063a9059cbb90604401602060405180830381600087803b15801561024b57600080fd5b505af115801561025f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610283919061059a565b505b50508080610292906105bc565b91505061015d565b505080806102a7906105bc565b915050610127565b505050565b6102bc610440565b6102c6600061046d565b565b6102d0610440565b60005b6002548110156102af576000600282815481106102f2576102f2610584565b60009182526020822001546001600160a01b0316915084848481811061031a5761031a610584565b60200291909101359150506001600160a01b03821661036657604051339082156108fc029083906000818181858888f19350505050158015610360573d6000803e3d6000fd5b506103e8565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b1580156103ae57600080fd5b505af11580156103c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e6919061059a565b505b505080806103f5906105bc565b9150506102d3565b610405610440565b6001600160a01b03811661043457604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61043d8161046d565b50565b6000546001600160a01b031633146102c65760405163118cdaa760e01b815233600482015260240161042b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f8401126104cf57600080fd5b50813567ffffffffffffffff8111156104e757600080fd5b6020830191508360208260051b850101111561050257600080fd5b9250929050565b6000806020838503121561051c57600080fd5b823567ffffffffffffffff81111561053357600080fd5b61053f858286016104bd565b90969095509350505050565b6001600160a01b038116811461043d57600080fd5b60006020828403121561057257600080fd5b813561057d8161054b565b9392505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156105ac57600080fd5b8151801515811461057d57600080fd5b60006000198214156105de57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212205980fc977a041ff0f4e775fe97855750db568fb9bd9a848ad94b27df6846df3864736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100565760003560e01c806312065fe01461005f578063428dc4511461007f578063715018a61461009f5780638da5cb5b146100b4578063d37c4c29146100dc578063f2fde38b146100fc57005b3661005d57005b005b34801561006b57600080fd5b506040514781526020015b60405180910390f35b34801561008b57600080fd5b5061005d61009a366004610509565b61011c565b3480156100ab57600080fd5b5061005d6102b4565b3480156100c057600080fd5b506000546040516001600160a01b039091168152602001610076565b3480156100e857600080fd5b5061005d6100f7366004610509565b6102c8565b34801561010857600080fd5b5061005d610117366004610560565b6103fd565b610124610440565b60005b818110156102af57600083838381811061014357610143610584565b90506020020160208101906101589190610560565b905060005b60025481101561029a5760006002828154811061017c5761017c610584565b6000918252602082200154600380546001600160a01b03909216935090849081106101a9576101a9610584565b60009182526020909120015490506001600160a01b038216610201576040516001600160a01b0385169082156108fc029083906000818181858888f193505050501580156101fb573d6000803e3d6000fd5b50610285565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820183905283169063a9059cbb90604401602060405180830381600087803b15801561024b57600080fd5b505af115801561025f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610283919061059a565b505b50508080610292906105bc565b91505061015d565b505080806102a7906105bc565b915050610127565b505050565b6102bc610440565b6102c6600061046d565b565b6102d0610440565b60005b6002548110156102af576000600282815481106102f2576102f2610584565b60009182526020822001546001600160a01b0316915084848481811061031a5761031a610584565b60200291909101359150506001600160a01b03821661036657604051339082156108fc029083906000818181858888f19350505050158015610360573d6000803e3d6000fd5b506103e8565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b1580156103ae57600080fd5b505af11580156103c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e6919061059a565b505b505080806103f5906105bc565b9150506102d3565b610405610440565b6001600160a01b03811661043457604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61043d8161046d565b50565b6000546001600160a01b031633146102c65760405163118cdaa760e01b815233600482015260240161042b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f8401126104cf57600080fd5b50813567ffffffffffffffff8111156104e757600080fd5b6020830191508360208260051b850101111561050257600080fd5b9250929050565b6000806020838503121561051c57600080fd5b823567ffffffffffffffff81111561053357600080fd5b61053f858286016104bd565b90969095509350505050565b6001600160a01b038116811461043d57600080fd5b60006020828403121561057257600080fd5b813561057d8161054b565b9392505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156105ac57600080fd5b8151801515811461057d57600080fd5b60006000198214156105de57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212205980fc977a041ff0f4e775fe97855750db568fb9bd9a848ad94b27df6846df3864736f6c63430008090033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 310,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "cache",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 12,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "tokens",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 15,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "amounts",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_uint256)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}